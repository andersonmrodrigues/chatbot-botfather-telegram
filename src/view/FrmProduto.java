/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dal.DAO;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Categoria;
import model.Produto;

/**
 *
 * @author Jean
 */
public class FrmProduto extends javax.swing.JFrame {

    /**
     * Creates new form FrmProduto
     */
    public FrmProduto() {
        initComponents();
        carregaTableProduto();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProduto = new javax.swing.JTable();
        btnAddProd = new javax.swing.JButton();
        btnEditProd = new javax.swing.JButton();
        btnRemoveProd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnFechar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tableProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Categoria", "Descrição", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableProdutoKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableProduto);

        btnAddProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/Add-icon.png"))); // NOI18N
        btnAddProd.setText("Adicionar");
        btnAddProd.setToolTipText("Adicionar Produto(Ctrl+I)");
        btnAddProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProdActionPerformed(evt);
            }
        });

        btnEditProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/edit.png"))); // NOI18N
        btnEditProd.setText("Editar");
        btnEditProd.setToolTipText("Editar Produto (Ctrl+E)");
        btnEditProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditProdActionPerformed(evt);
            }
        });

        btnRemoveProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/Button-Delete-icon.png"))); // NOI18N
        btnRemoveProd.setText("Remover");
        btnRemoveProd.setToolTipText("Remover Produto(Ctrl+R)");
        btnRemoveProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveProdActionPerformed(evt);
            }
        });

        jLabel1.setText("Produto");

        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/Users-Exit-icon.png"))); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.setToolTipText("Fechar janela");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnAddProd, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEditProd, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnRemoveProd, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(30, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(btnFechar)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddProd)
                    .addComponent(btnEditProd)
                    .addComponent(btnRemoveProd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(btnFechar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProdActionPerformed
        FrmFormProduto prod = new FrmFormProduto();
        prod.setTitle("Produto");
        prod.setVisible(true);
        carregaTableProduto();
    }//GEN-LAST:event_btnAddProdActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnEditProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditProdActionPerformed
        try {
            int row = tableProduto.getSelectedRow();
            if (row != -1) {
                int column = 0;
                Integer id = (Integer) tableProduto.getValueAt(row, column);
                DAO dao = new DAO();
                Produto p = (Produto) dao.findById(Produto.class, id);
                if (p != null) {
                    FrmFormProduto prod = new FrmFormProduto(p);
                    prod.setVisible(true);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um produto na tabela.", "AVISO", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao iniciar edição do produto, tente novamente.", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        carregaTableProduto();
    }//GEN-LAST:event_btnEditProdActionPerformed

    private void btnRemoveProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveProdActionPerformed
        try {
            int row = tableProduto.getSelectedRow();
            if (row != -1) {
                int column = 0;
                Integer id = (Integer) tableProduto.getValueAt(row, column);
                DAO dao = new DAO();
                Produto p = new Produto();
                p.setIdProduto(id);
                dao.removeById(p);
                carregaTableProduto();
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um produto na tabela.", "AVISO", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao remover o produto, tente novamente.", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoveProdActionPerformed

    private void tableProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableProdutoKeyPressed
        if (evt.isControlDown()) {
            if (evt.getKeyCode() == KeyEvent.VK_I) {
                FrmFormProduto prod = new FrmFormProduto();
                prod.setTitle("Produto");
                prod.setVisible(true);
                carregaTableProduto();
            } else if (evt.getKeyCode() == KeyEvent.VK_E) {
                try {
                    int row = tableProduto.getSelectedRow();
                    if (row != -1) {
                        int column = 0;
                        Integer id = (Integer) tableProduto.getValueAt(row, column);
                        DAO dao = new DAO();
                        Produto p = (Produto) dao.findById(Produto.class, id);
                        if (p != null) {
                            FrmFormProduto prod = new FrmFormProduto(p);
                            prod.setVisible(true);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Selecione um produto na tabela.", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Erro ao iniciar edição do produto, tente novamente.", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
                carregaTableProduto();
            } else if (evt.getKeyCode() == KeyEvent.VK_R) {
                try {
                    int row = tableProduto.getSelectedRow();
                    if (row != -1) {
                        int column = 0;
                        Integer id = (Integer) tableProduto.getValueAt(row, column);
                        DAO dao = new DAO();
                        Produto p = new Produto();
                        p.setIdProduto(id);
                        dao.removeById(p);
                        carregaTableProduto();
                    } else {
                        JOptionPane.showMessageDialog(this, "Selecione um produto na tabela.", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Erro ao remover o produto, tente novamente.", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_tableProdutoKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProd;
    private javax.swing.JButton btnEditProd;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnRemoveProd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableProduto;
    // End of variables declaration//GEN-END:variables

    private void carregaTableProduto() {
        try {
            DAO dao = new DAO();
            List<Produto> produtoList = dao.findAll(Produto.class, null);
            //carragar esta lista na JTable
            DefaultTableModel tbl = (DefaultTableModel) tableProduto.getModel();
            tbl.setRowCount(0);//limpando a tabela
            for (Produto p : produtoList) {
                Object[] linha = new Object[4];
                linha[0] = p.getIdProduto();
                ArrayList<Categoria> catList = (ArrayList<Categoria>) dao.findById(Categoria.class, p.getIdCategoria());
                if (catList != null && !catList.isEmpty()) {
                    linha[1] = catList.get(0).getDsCategoria();
                } else {
                    linha[1] = "";
                }
                linha[2] = p.getDsProduto();
                linha[3] = currencyFormat(p.getVlPreco());
                tbl.addRow(linha);
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static String currencyFormat(BigDecimal n) {
        return NumberFormat.getCurrencyInstance().format(n);
    }
}
